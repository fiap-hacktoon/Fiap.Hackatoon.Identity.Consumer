apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-api-deployment
  annotations:
    autor: Marcelo Cedro
spec:
  replicas: 3  # Número de réplicas (pods) da aplicação
  selector:
    matchLabels:
      app: kubernetes-api
  template:
    metadata:
      labels:
        app: kubernetes-api
    spec:
      containers:
      - name: kubernetes-api
        image: maxcedro/UserHub:1  # Imagem Docker da sua API
        ports:
        - containerPort: 8080  # Porta exposta dentro do container
        resources:
          limits:
            cpu: "0.5"        # Limite máximo de CPU
            memory: 512Mi   # Limite máximo de memória
          requests:
            cpu: "0.2"        # Recurso mínimo reservado de CPU
            memory: 256Mi   # Recurso mínimo reservado de memória

        # Variáveis de ambiente injetadas via Secret
        env:
          - name: ConnectionStrings__DefaultConnection
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: DefaultConnection

          - name: SecretJWT
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: SecretJWT

        # 🩺 Liveness Probe: Verifica se o container ainda está saudável
        # Se falhar consecutivamente, o pod será reiniciado
        livenessProbe:
          httpGet:
            path: /health  # Endpoint da sua API que indica saúde
            port: 8080     # Porta onde o serviço está ouvindo
          initialDelaySeconds: 15  # Tempo inicial de espera antes de iniciar o primeiro check
          periodSeconds: 10        # Frequência com que o check será feito
          failureThreshold: 3      # Número de falhas consecutivas antes de reiniciar o pod